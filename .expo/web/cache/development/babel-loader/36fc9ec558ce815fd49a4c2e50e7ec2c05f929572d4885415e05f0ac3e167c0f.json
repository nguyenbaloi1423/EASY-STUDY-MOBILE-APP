{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar express = require('express');\nvar router = express.Router();\nvar userController = require(\"../components/User/Controller\");\nvar _require = require(\"../Vadilate/Vadilate\"),\n  checkRegister = _require.checkRegister;\nvar service = require(\"../components/User/Service\");\nrouter.post('/login', function () {\n  var _ref = _asyncToGenerator(function* (req, res, next) {\n    try {\n      var _req$body = req.body,\n        email = _req$body.email,\n        password = _req$body.password;\n      var _user = yield userController.login(email, password);\n      if (_user) {\n        return res.status(200).json({\n          data: {\n            result: true,\n            user: true,\n            message: 'Đăng Nhập Thành Công'\n          }\n        });\n      } else {\n        return res.status(400).json({\n          result: false,\n          user: null,\n          message: 'Đăng Nhập Thất Bại'\n        });\n      }\n    } catch (error) {\n      return res.status(500).json({\n        result: false,\n        user: null,\n        message: 'Đăng Nhập Thất Bại'\n      });\n    }\n  });\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nrouter.post('/register', [checkRegister], function () {\n  var _ref2 = _asyncToGenerator(function* (req, res, next) {\n    try {\n      var _req$body2 = req.body,\n        email = _req$body2.email,\n        password = _req$body2.password,\n        masv = _req$body2.masv;\n      var _user2 = yield userController.register(email, password, masv);\n      if (_user2) {\n        res.status(200).json({\n          result: true,\n          user: true,\n          message: 'Đăng Kí Thành Công'\n        });\n      } else {\n        res.status(400).json({\n          result: false,\n          user: null,\n          message: 'Đăng Kí Thất Bại'\n        });\n      }\n    } catch (error) {\n      res.status(500).json({\n        result: false,\n        user: null,\n        message: 'Đăng Kí Thất Bại'\n      });\n    }\n  });\n  return function (_x4, _x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}());\nrouter.post('/change-password', function () {\n  var _ref3 = _asyncToGenerator(function* (req, res, next) {\n    try {\n      var _req$body3 = req.body,\n        email = _req$body3.email,\n        password = _req$body3.password,\n        newPassword = _req$body3.newPassword;\n      var _user3 = yield userController.changePassword(email, password, newPassword);\n      if (_user3) {\n        res.status(200).json({\n          result: true,\n          user: true,\n          message: _user3 + 'Đổi mật khẩu thành công'\n        });\n      } else {\n        res.status(400).json({\n          result: false,\n          user: null,\n          message: _user3 + 'Đổi mật khẩu thất bại'\n        });\n      }\n    } catch (error) {\n      res.status(500).json({\n        result: false,\n        user: null,\n        message: user + 'Đổi mật khẩu thất bại'\n      });\n    }\n  });\n  return function (_x7, _x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}());\nrouter.post('/sendOTP', userController.sendOTP);\nrouter.post('/resetPassword', userController.resetPassword);\nrouter.post('/sendFeedback', userController.sendFeedback);\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","userController","_require","checkRegister","service","post","_ref","_asyncToGenerator","req","res","next","_req$body","body","email","password","user","login","status","json","data","result","message","error","_x","_x2","_x3","apply","arguments","_ref2","_req$body2","masv","register","_x4","_x5","_x6","_ref3","_req$body3","newPassword","changePassword","_x7","_x8","_x9","sendOTP","resetPassword","sendFeedback","module","exports"],"sources":["C:/Users/BA LOI/Downloads/BackEnd_PTCN2-main/BackEnd_PTCN2-main/routes/index.js"],"sourcesContent":["var express = require('express');\nvar router = express.Router();\nconst userController = require('../components/User/Controller');\nconst {checkRegister} = require('../Vadilate/Vadilate');\nconst service = require('../components/User/Service');\n\n\n//http://localhost:3000/API/user/login\nrouter.post('/login', async(req, res, next)=>{\n    try {\n      const {email, password} = req.body;\n      const user = await userController.login(email, password);\n      if(user){\n        return res.status(200).json({data:{ result: true, user: true, message:'Đăng Nhập Thành Công'}});\n      }else{\n        return res.status(400).json({result: false, user: null, message:'Đăng Nhập Thất Bại'});\n      }\n    } catch (error) {\n      return res.status(500).json({result: false, user: null, message:'Đăng Nhập Thất Bại'});\n    }\n});\n//http://localhost:3000/api/user/register\nrouter.post('/register', [checkRegister], async(req, res, next)=>{\n  try {\n    const {email, password, masv} = req.body;\n    const user = await userController.register(email, password, masv);\n    if(user){\n      res.status(200).json({result: true, user: true, message:'Đăng Kí Thành Công'});\n    }else{\n      res.status(400).json({result: false, user: null,message:'Đăng Kí Thất Bại'});\n    }\n  } catch (error) {\n    res.status(500).json({result: false, user: null, message:'Đăng Kí Thất Bại'});\n  }\n})\nrouter.post('/change-password', async (req, res, next) => {\n  try {\n    const { email, password, newPassword } = req.body;\n    const user = await userController.changePassword(email, password, newPassword);\n    if (user) {\n      // req.session.user = user;\n      res.status(200).json({ result: true, user:true, message: user + 'Đổi mật khẩu thành công' });\n    } else {\n      res.status(400).json({ result: false, user: null, message: user + 'Đổi mật khẩu thất bại' });\n    }\n\n\n  } catch (error) {\n    res.status(500).json({ result: false, user: null, message: user + 'Đổi mật khẩu thất bại' });\n  }\n})\nrouter.post('/sendOTP', userController.sendOTP);\n// POST // http://localhost:3000/sendOTP\nrouter.post('/resetPassword', userController.resetPassword);\n// POST // http://localhost:3000/resetPassword\nrouter.post('/sendFeedback', userController.sendFeedback);\n// POST // http://localhost:3000/sendOTP\n// router.get('/getUser', service.getUserById);\n// router.get('/getAll', service.getAllUsers);\n\n\nmodule.exports = router;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}