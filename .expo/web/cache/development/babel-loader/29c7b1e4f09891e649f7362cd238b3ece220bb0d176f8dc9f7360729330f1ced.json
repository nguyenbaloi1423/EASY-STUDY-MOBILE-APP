{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar userService = require(\"./Service\");\nvar bcrypt = require('bcryptjs');\nvar login = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    try {\n      return yield userService.login(email, password);\n    } catch (error) {\n      console.log('user controller login error: ', error);\n    }\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar register = function () {\n  var _ref2 = _asyncToGenerator(function* (email, password, masv) {\n    try {\n      return yield userService.register(email, password, masv);\n    } catch (error) {\n      console.log('Register controller login error: ', error);\n    }\n  });\n  return function register(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar changePassword = function () {\n  var _ref3 = _asyncToGenerator(function* (email, password, newPassword) {\n    try {\n      return yield userService.changePassword(email, password, newPassword);\n    } catch (error) {\n      console.error('User controller login error: ', error);\n    }\n  });\n  return function changePassword(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar sendOTP = function () {\n  var _ref4 = _asyncToGenerator(function* (req, res) {\n    try {\n      var email = req.body.email;\n      var user = yield userService.getUserByEmail(email);\n      if (!user) {\n        return res.status(404).json({\n          message: 'Không tìm thấy email'\n        });\n      }\n      var otp = yield userService.generateOTP(email);\n      yield userService.sendOTPEmail(email, otp);\n      res.status(200).json({\n        message: 'OTP đã được gửi vui lòng kiểm tra email'\n      });\n    } catch (err) {\n      console.log(err);\n      res.status(500).json({\n        message: 'Sever đang lỗi vui lòng thử lại sau'\n      });\n    }\n  });\n  return function sendOTP(_x9, _x10) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar sendFeedback = function () {\n  var _ref5 = _asyncToGenerator(function* (req, res) {\n    try {\n      var _req$body = req.body,\n        email = _req$body.email,\n        feedback = _req$body.feedback;\n      yield userService.sendFeedBackEmail(email, feedback);\n      res.status(200).json({\n        message: 'Yêu cầu của bạn đã được gửi, vui lòng đợi email chúng tôi sẽ trả lời bạn sớm nhất'\n      });\n    } catch (err) {\n      console.log(err);\n      res.status(500).json({\n        message: 'Sever đang lỗi vui lòng thử lại sau'\n      });\n    }\n  });\n  return function sendFeedback(_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar resetPassword = function () {\n  var _ref6 = _asyncToGenerator(function* (req, res) {\n    try {\n      var _req$body2 = req.body,\n        email = _req$body2.email,\n        otp = _req$body2.otp,\n        newPassword = _req$body2.newPassword;\n      var user = yield userService.getUserByEmail(email);\n      if (!user) {\n        return res.status(404).json('User not found');\n      }\n      var isOTPValid = yield userService.verifyOTP(email, otp);\n      if (!isOTPValid) {\n        return res.status(400).json('Invalid OTP');\n      }\n      var hashedPassword = yield bcrypt.hash(newPassword, 10);\n      yield userService.updatePassword(email, hashedPassword);\n      res.status(200).json('Password updated successfully');\n    } catch (err) {\n      console.log(err);\n      res.status(500).json('Internal Server Error');\n    }\n    ;\n  });\n  return function resetPassword(_x13, _x14) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  login: login,\n  register: register,\n  changePassword: changePassword,\n  sendOTP: sendOTP,\n  resetPassword: resetPassword,\n  sendFeedback: sendFeedback\n};","map":{"version":3,"names":["userService","require","bcrypt","login","_ref","_asyncToGenerator","email","password","error","console","log","_x","_x2","apply","arguments","register","_ref2","masv","_x3","_x4","_x5","changePassword","_ref3","newPassword","_x6","_x7","_x8","sendOTP","_ref4","req","res","body","user","getUserByEmail","status","json","message","otp","generateOTP","sendOTPEmail","err","_x9","_x10","sendFeedback","_ref5","_req$body","feedback","sendFeedBackEmail","_x11","_x12","resetPassword","_ref6","_req$body2","isOTPValid","verifyOTP","hashedPassword","hash","updatePassword","_x13","_x14","module","exports"],"sources":["C:/Users/BA LOI/Downloads/BackEnd_PTCN2-main/BackEnd_PTCN2-main/components/User/Controller.js"],"sourcesContent":["\nconst userService = require('./Service');\nconst bcrypt = require('bcryptjs');\nconst login = async (email, password) => {\n    try {\n        return await userService.login(email, password);\n    } catch (error) {\n        console.log('user controller login error: ', error);\n    }\n}\n\nconst register = async (email, password, masv) => {\n    try {\n        return await userService.register(email, password, masv);\n    } catch (error) {\n        console.log('Register controller login error: ', error);\n    }\n}\nconst changePassword = async (email, password, newPassword) => {\n    try {\n        return await userService.changePassword(email, password, newPassword);\n    } catch (error) {\n        console.error('User controller login error: ', error);\n    }\n}\nconst sendOTP = async function (req, res) {\n    try {\n        const { email } = req.body;\n        const user = await userService.getUserByEmail(email);\n        if (!user) {\n            return res.status(404).json({message:'Không tìm thấy email'});\n        }\n        const otp = await userService.generateOTP(email);\n        await userService.sendOTPEmail(email, otp);\n        res.status(200).json({message:'OTP đã được gửi vui lòng kiểm tra email'});\n    } catch (err) {\n        console.log(err);\n        res.status(500).json({message:'Sever đang lỗi vui lòng thử lại sau'});\n    }\n};\nconst sendFeedback = async function (req, res) {\n    try {\n        const { email, feedback } = req.body;\n        await userService.sendFeedBackEmail(email, feedback);\n        res.status(200).json({message:'Yêu cầu của bạn đã được gửi, vui lòng đợi email chúng tôi sẽ trả lời bạn sớm nhất'});\n    } catch (err) {\n        console.log(err);\n        res.status(500).json({message:'Sever đang lỗi vui lòng thử lại sau'});\n    }\n};\nconst resetPassword = async function (req, res) {\n    try {\n        const { email, otp, newPassword } = req.body;\n        const user = await userService.getUserByEmail(email);\n        if (!user) {\n            return res.status(404).json('User not found');\n        }\n        const isOTPValid = await userService.verifyOTP(email, otp);\n        if (!isOTPValid) {\n            return res.status(400).json('Invalid OTP');\n        }\n        const hashedPassword = await bcrypt.hash(newPassword, 10);\n        await userService.updatePassword(email, hashedPassword);\n        res.status(200).json('Password updated successfully');\n    } catch (err) {\n        console.log(err);\n        res.status(500).json('Internal Server Error');\n    };\n    \n}\nmodule.exports = { login, register, changePassword, sendOTP, resetPassword, sendFeedback };"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}