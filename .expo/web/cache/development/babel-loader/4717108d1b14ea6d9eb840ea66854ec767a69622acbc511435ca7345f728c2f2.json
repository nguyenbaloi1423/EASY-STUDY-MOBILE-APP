{"ast":null,"code":"var _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nvar userModel = require(\"./Model\");\nvar bcrypt = require('bcryptjs');\nvar nodemailer = require('nodemailer');\nvar login = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    try {\n      var user = yield userModel.findOne({\n        email: email\n      });\n      if (user) {\n        var isMatch = bcrypt.compareSync(password, user.password);\n        return isMatch ? user : false;\n      }\n    } catch (error) {\n      console.log('Lỗi rồi bạn ơi', error);\n    }\n    return false;\n  });\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar register = function () {\n  var _ref2 = _asyncToGenerator(function* (email, password, masv) {\n    try {\n      var user = yield userModel.findOne({\n        email: email\n      });\n      if (!user) {\n        var salt = bcrypt.genSaltSync(10);\n        var hash = bcrypt.hashSync(password, salt);\n        yield userModel.create({\n          email: email,\n          password: hash,\n          masv: masv\n        });\n        return true;\n      }\n    } catch (error) {\n      console.log('User register error: ', error);\n    }\n    return false;\n  });\n  return function register(_x3, _x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar changePassword = function () {\n  var _ref3 = _asyncToGenerator(function* (email, password, newPassword) {\n    try {\n      var user = yield userModel.findOne({\n        email: email\n      });\n      var isMatch = yield bcrypt.compare(password, user.password);\n      if (!isMatch) {\n        return false;\n      }\n      var salt = yield bcrypt.genSalt(10);\n      var hashedPassword = yield bcrypt.hash(newPassword, salt);\n      user.password = hashedPassword;\n      yield user.save();\n      return true;\n    } catch (error) {\n      console.log(\"User service register error\", error);\n      return false;\n    }\n  });\n  return function changePassword(_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: 'iamdemon.dev@gmail.com',\n    pass: 'naoxvujkcvkfyill'\n  }\n});\nvar getUserByEmail = function () {\n  var _ref4 = _asyncToGenerator(function* (email) {\n    return yield userModel.findOne({\n      email: email\n    });\n  });\n  return function getUserByEmail(_x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nvar generateOTP = function () {\n  var _ref5 = _asyncToGenerator(function* (email) {\n    var otp = Math.floor(100000 + Math.random() * 900000);\n    yield userModel.findOneAndUpdate({\n      email: email\n    }, {\n      otp: otp\n    }, {\n      upsert: true\n    });\n    return otp;\n  });\n  return function generateOTP(_x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nvar verifyOTP = function () {\n  var _ref6 = _asyncToGenerator(function* (email, otp) {\n    var otpRecord = yield userModel.findOne({\n      email: email\n    });\n    if (!otpRecord) {\n      return false;\n    }\n    return otpRecord.otp == otp;\n  });\n  return function verifyOTP(_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar updatePassword = function () {\n  var _ref7 = _asyncToGenerator(function* (email, newPassword) {\n    yield userModel.findOneAndUpdate({\n      email: email\n    }, {\n      password: newPassword\n    });\n  });\n  return function updatePassword(_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nvar sendOTPEmail = function () {\n  var _ref8 = _asyncToGenerator(function* (email, otp) {\n    var mailOptions = {\n      from: 'EASY STUDY MOBILE APP <iamdemon.dev@gmail.com>',\n      to: email,\n      subject: 'Bạn Đã Yêu Cầu Quên Mật Khẩu',\n      html: `Mã OTP để đặt lại mật khẩu của bạn: ${otp}. Mã có hiệu lực 10 phút`\n    };\n    yield transporter.sendMail(mailOptions);\n  });\n  return function sendOTPEmail(_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nvar sendFeedBackEmail = function () {\n  var _ref9 = _asyncToGenerator(function* (email, feedback, attachmentPath) {\n    var mailOptions = {\n      from: 'EASY STUDY MOBILE APP <iamdemon.dev@gmail.com>',\n      to: 'Devnguyenthanhan26@gmail.com',\n      subject: 'Một người dùng đã nhờ sự hỗ trợ của bạn',\n      html: `Người cần bạn hỗ trợ là: ${email}<br><br>Nội dung cần hỗ trợ là: ${feedback}`\n    };\n    yield transporter.sendMail(mailOptions);\n    var attachments = [];\n    if (attachmentPath) {\n      attachments.push({\n        path: attachmentPath\n      });\n    }\n  });\n  return function sendFeedBackEmail(_x17, _x18, _x19) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nmodule.exports = {\n  login: login,\n  register: register,\n  changePassword: changePassword,\n  getUserByEmail: getUserByEmail,\n  generateOTP: generateOTP,\n  verifyOTP: verifyOTP,\n  updatePassword: updatePassword,\n  sendOTPEmail: sendOTPEmail,\n  sendFeedBackEmail: sendFeedBackEmail\n};","map":{"version":3,"names":["userModel","require","bcrypt","nodemailer","login","_ref","_asyncToGenerator","email","password","user","findOne","isMatch","compareSync","error","console","log","_x","_x2","apply","arguments","register","_ref2","masv","salt","genSaltSync","hash","hashSync","create","_x3","_x4","_x5","changePassword","_ref3","newPassword","compare","genSalt","hashedPassword","save","_x6","_x7","_x8","transporter","createTransport","service","auth","pass","getUserByEmail","_ref4","_x9","generateOTP","_ref5","otp","Math","floor","random","findOneAndUpdate","upsert","_x10","verifyOTP","_ref6","otpRecord","_x11","_x12","updatePassword","_ref7","_x13","_x14","sendOTPEmail","_ref8","mailOptions","from","to","subject","html","sendMail","_x15","_x16","sendFeedBackEmail","_ref9","feedback","attachmentPath","attachments","push","path","_x17","_x18","_x19","module","exports"],"sources":["C:/Users/BA LOI/Downloads/BackEnd_PTCN2-main/BackEnd_PTCN2-main/components/User/Service.js"],"sourcesContent":["const userModel = require('./Model');\nconst bcrypt = require('bcryptjs');\nconst nodemailer = require('nodemailer');\n\n\nconst login = async (email, password) => {\n  try {\n    let user = await userModel.findOne({ email });\n    if (user) {\n      const isMatch = bcrypt.compareSync(password, user.password);\n      return isMatch ? user : false;\n    }\n  } catch (error) {\n    console.log('Lỗi rồi bạn ơi', error);\n  }\n  return false;\n}\n\nconst register = async (email, password, masv) => {\n  try {\n    let user = await userModel.findOne({ email });\n    if (!user) {\n      const salt = bcrypt.genSaltSync(10);\n      const hash = bcrypt.hashSync(password, salt);\n      await userModel.create({\n        email: email,\n        password: hash,\n        masv: masv,\n      });\n      return true;\n    }\n  } catch (error) {\n    console.log('User register error: ', error);\n  }\n  return false;\n}\nconst changePassword = async (email, password, newPassword) => {\n\n  try {\n    let user = await userModel.findOne({ email });\n    const isMatch = await bcrypt.compare(password, user.password);\n    if (!isMatch) {\n      return false;\n    }\n\n    const salt = await bcrypt.genSalt(10);\n    const hashedPassword = await bcrypt.hash(newPassword, salt);\n\n    user.password = hashedPassword; // Lưu mật khẩu mới đã được mã hóa\n    await user.save();\n    return true;\n\n  } catch (error) {\n    console.log(\"User service register error\", error);\n    return false; // Trả về false khi có lỗi\n  }\n\n};\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: 'iamdemon.dev@gmail.com',\n    pass: 'naoxvujkcvkfyill',\n  }\n});\n\nconst getUserByEmail = async function (email) {\n  return await userModel.findOne({ email });\n};\n\nconst generateOTP = async function (email) {\n  const otp = Math.floor(100000 + Math.random() * 900000);\n  await userModel.findOneAndUpdate({ email }, { otp }, { upsert: true });\n  return otp;\n};\n\nconst verifyOTP = async function (email, otp) {\n  const otpRecord = await userModel.findOne({ email });\n  if (!otpRecord) {\n    return false;\n  }\n  return otpRecord.otp == otp;\n};\n\nconst updatePassword = async function (email, newPassword) {\n  await userModel.findOneAndUpdate({ email }, { password: newPassword });\n};\n\nconst sendOTPEmail = async function (email, otp) {\n  const mailOptions = {\n    from: 'EASY STUDY MOBILE APP <iamdemon.dev@gmail.com>',\n    to: email,\n    subject: 'Bạn Đã Yêu Cầu Quên Mật Khẩu',\n    html: `Mã OTP để đặt lại mật khẩu của bạn: ${otp}. Mã có hiệu lực 10 phút`,\n  };\n  await transporter.sendMail(mailOptions);\n\n};\nconst sendFeedBackEmail = async function (email, feedback, attachmentPath) {\n  const mailOptions = {\n    from: 'EASY STUDY MOBILE APP <iamdemon.dev@gmail.com>',\n    to: 'Devnguyenthanhan26@gmail.com',\n    subject: 'Một người dùng đã nhờ sự hỗ trợ của bạn',\n    html: `Người cần bạn hỗ trợ là: ${email}<br><br>Nội dung cần hỗ trợ là: ${feedback}`,\n  };\n  await transporter.sendMail(mailOptions);\n  const attachments = [];\n  if (attachmentPath) {\n    attachments.push({ path: attachmentPath });\n  }\n}\n// const getUserById = async (userId) => {\n//   try {\n//     const user = await userModel.findById(userId);\n//     return user;\n//   } catch (error) {\n//     throw new Error('Failed to get user');\n//   }\n// };\n\n// // Hàm getAll: Lấy danh sách tất cả người dùng\n// const getAllUsers = async () => {\n//   try {\n//     const users = await userModel.find();\n//     return users;\n//   } catch (error) {\n//     throw new Error('Failed to get all users');\n//   }\n// };\n\n\nmodule.exports = { login, register, changePassword, getUserByEmail, generateOTP, verifyOTP, updatePassword, sendOTPEmail, sendFeedBackEmail };"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}